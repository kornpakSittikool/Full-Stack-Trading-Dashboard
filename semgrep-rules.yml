rules:
  # ตรวจจับการใช้ eval() ซึ่งเป็นฟังก์ชันที่อาจเปิดช่องโหว่ให้กับการโจมตี เช่น code injection
  - id: detect-eval-usage
    patterns:
      - pattern: eval($X)
    message: "Avoid using eval() as it may introduce security vulnerabilities."
    severity: ERROR
    languages: [javascript ,typescript]
  
  # ตรวจจับการใช้ฟังก์ชันที่อาจไม่ปลอดภัย เช่น ฟังก์ชันที่อาจมีช่องโหว่ที่ทำให้โค้ดเสี่ยง
  - id: detect-function-usage
    patterns:
      - pattern: someUnsafeFunction($X)
    message: "Detected the use of a potentially unsafe function. Check if this function poses any security risks."
    severity: WARNING
    languages: [javascript ,typescript]
  
  # ตรวจจับการกำหนดค่าความลับ (เช่น API keys หรือ passwords) ที่อยู่ในโค้ดโดยตรง ซึ่งไม่ควรทำ
  - id: detect-hardcoded-secret
    patterns:
      - pattern: $KEY = "$SECRET"
      - pattern-inside: |
          const $KEY = "$SECRET"
    message: "Detected hardcoded secrets (such as API keys or passwords) in the code."
    severity: ERROR
    languages: [javascript ,typescript]
  
  # ตรวจจับการใช้ HTTP (ไม่ปลอดภัย) แทน HTTPS ซึ่งควรใช้ HTTPS เพื่อความปลอดภัย
  - id: detect-insecure-endpoint
    patterns:
      - pattern: "http://$X"
    message: "Detected an insecure endpoint (HTTP). It is recommended to use HTTPS instead."
    severity: ERROR
    languages: [javascript ,typescript]
  
  # ตรวจจับการ log ข้อมูลที่อาจมีความลับหรือข้อมูลที่ไม่ควรถูกเปิดเผยใน log
  - id: detect-sensitive-logging
    patterns:
      - pattern: console.log($X)
    message: "Detected logging of potentially sensitive information. Ensure that the logged data is safe."
    severity: WARNING
    languages: [javascript ,typescript]
  
  # ตรวจจับการใช้ Regular Expressions ที่อาจทำให้เกิดปัญหา ReDoS (Regular Expression Denial of Service) 
  - id: detect-unsafe-regular-expressions
    patterns:
      - pattern: /(.+)+/
    message: "Detected a regular expression that could lead to ReDoS (Regular Expression Denial of Service)."
    severity: WARNING
    languages: [javascript ,typescript]
  
  # ตรวจจับการใช้ข้อมูลที่ผู้ใช้ส่งมา (input) โดยไม่มีการตรวจสอบ ซึ่งอาจทำให้เกิดช่องโหว่
  - id: detect-unvalidated-input
    patterns:
      - pattern: req.body.$INPUT
    message: "Detected unvalidated user input, which may lead to security vulnerabilities."
    severity: WARNING
    languages: [javascript ,typescript]
  
  # ตรวจจับการประกาศฟังก์ชันที่ซ้ำซ้อน ซึ่งอาจทำให้โค้ดยากต่อการดูแลรักษา
  - id: duplicate-code
    pattern: |
      def $FUNC_NAME($ARGS):
          $BODY
      def $FUNC_NAME($ARGS):
          $BODY
    message: "Duplicated function definition detected."
    severity: WARNING
  
  # ตรวจจับฟังก์ชันที่ยาวเกินไป ซึ่งอาจทำให้โค้ดยากต่อการอ่านและบำรุงรักษา
  - id: long-function
    pattern: |
      def $FUNC_NAME($ARGS):
          $BODY
    message: "Function is too long. Consider refactoring."
    severity: WARNING
    max-lines: 20
    languages: [javascript, typescript]
  
  # ตรวจจับการใช้ if-else ที่ซับซ้อน ซึ่งอาจทำให้โค้ดยากต่อการอ่านและแก้ไข
  - id: complex-if-else
    pattern: |
      if $COND1:
          $BODY1
      else:
          if $COND2:
              $BODY2
          else:
              $BODY3
    message: "Complex if-else statement detected. Consider refactoring."
    severity: WARNING
    languages: [javascript, typescript]
  
  # ตรวจจับลูปที่ซ้ำซ้อน ซึ่งอาจทำให้โค้ดยาวเกินไปและซับซ้อน
  - id: duplicate-loop
    pattern: |
      for $VAR in $COLLECTION:
          $BODY
      for $VAR in $COLLECTION:
          $BODY
    message: "Duplicated loop detected. Consider refactoring."
    severity: WARNING
    languages: [javascript, typescript]
  
  # ตรวจจับการใช้ค่าคงที่ที่ระบุในโค้ดโดยตรง (Hardcoded Values) ซึ่งไม่ควรกำหนดในโค้ด
  - id: hardcoded-value
    pattern: |
      $VAR = "secret"
    message: "Avoid using hardcoded values in the code."
    severity: ERROR
    languages: [javascript, typescript]
